#include <iostream>
using namespace::std;
#include <string>
#include <Windows.h> // для работы SetConsoleCP, SetConsoleOutputCP

/*
1. Написать программу, работающую с базой данных
в виде массива структур и выполняющую последовательный
ввод данных в массив и последующую распечатку его содержимого.

1.1 Типы данных выбрать самостоятельно.

2. Переписать программу п.4.1, используя массив указателей на структуры
и динамическое выделение памяти. Выполнить сортировку массива.

Фамилия
Дата рождения
Телефон
Сумма долга

Все записи с суммой долга, не равной 0, разместить в начале массива

*/
int main()
{
	SetConsoleCP(1251);// установка кодовой страницы win-cp 1251 в поток ввода
	SetConsoleOutputCP(1251); // установка кодовой страницы win-cp 1251 в поток вывода
	setlocale(LC_ALL, "Rus"); // Подключение русского языка

	struct Datalib{ // объявляем структуру
		string lastName;	// фамилия
		string ddmmyy;		// год рождения
		string phone;		// телефоне
		int money;			// сумма долга
	};
	const int i=3;
	Datalib *data = new Datalib[i]; // будем описывать троих человек. (массив структур через динамическое выделение пямяти)
	Datalib dataTemp; // как вспомогательная структура для сортировки

	for (int l = 0; l < i; l++) {	// считываем людей >> data[l]
		cout << endl << "#" << l+1 << ".";
		cout << "Введите Фамилию >> ";
		cin >> data[l].lastName;
		cout << "\nВведите дату рождения (дд.мм.гггг) >> ";
		cin >> data[l].ddmmyy;
		cout << "\nВведите номер телефона >> ";
		cin >> data[l].phone;
		cout << "\nВведите сумму долга >> ";
		cin >> data[l].money;
		cout << endl;
	}

	int temp; // переменная для хранения значения сортировк
	for (int l = 0; l < i-1; l++) // Сортируем стандартным "пузырьком" меняя местами сами структуры по алгоритму
	{
		if (data[l].money>0)
			for (int j = 0; j < i - 1; j++)
			{
				if (data[j + 1].money > data[j].money) // сортируем по убыванию суммы долга
				{
					dataTemp = data[j + 1];
					data[j + 1] = data[j];
					data[j] = dataTemp;
				}
			}
	}

	cout << endl;
	// выводим структуры (для удобства просто один нужный нам элемент структуры)
	for (int l = 0; l < i; l++)
		cout << data[l].money << endl;

	system("pause");
	return 0;
}
